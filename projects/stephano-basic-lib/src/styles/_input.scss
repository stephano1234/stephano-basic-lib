@use 'sass:math';
@import 'colors';
@import 'variables';

sbl-input {
  --mask-placeholder: "";

  .input-container {
    position: relative;
    display: flex;
    align-items: center;
    box-sizing: border-box;
    background-color: $white;
    border-width: $borderWidth;
    border-style: solid;
    border-radius: $borderRadius;
    border-color: $gray-700;
    font-size: $fontSize;
    color: $gray-800;

    &:has(input[sblInput][mask])::after {
      content: var(--mask-placeholder);
      pointer-events: none;
      width: 100%;
      height: 100%;
      box-sizing: border-box;
      position: absolute;
      white-space: nowrap;
      top: 0;
      left: 0;
      padding: $padding;
      opacity: .75;
      overflow: hidden;
    }

    &.display-error.valid.touched {
      border-color: $green-500;
    }

    &.display-error.invalid.touched {
      border-color: $red-600;
    }

    &.display-error.pending {
      border-color: $yellow-400;
    }

    input {
      font-family: inherit;
      min-width: 0;
      flex: 0 1 100%;
      padding: $padding;
      border: none;
      background-color: transparent;
      outline: none;
      font-size: inherit;
      color: inherit;
    }

    sbl-icon[rightIcon] {
      width: $iconSize;
      height: $iconSize;
      color: $gray-800;
      padding-right: $padding;
      cursor: pointer;
    }

    &.disabled {
      border-color: $gray-500;
      background-color: $gray-300;
      color: $gray-500;
      position: relative;
      cursor: not-allowed;

      input {
        pointer-events: none;
      }

      sbl-icon[rightIcon] {
        color: $gray-500;
        cursor: not-allowed;
        pointer-events: none;
      }
    }
  }

  .error-container {
    width: 100%;
    height: $paddingError*2+$iconSizeError;
  }

  .error {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    color: $red-700;
  }

  .error-icon {
    width: $iconSizeError;
    height: $iconSizeError;
    color: inherit;
  }

  .error-text {
    font-size: $fontSizeError;
    color: inherit;
  }
}

// .error-tooltip-container {
//   font-size: $fontSizeError;
//   color: $red-700;
//   display: flex;
//   flex-direction: column;
//   row-gap: $paddingError;
//   border-width: $borderWidthError;
//   border-style: solid;
//   border-color: $red-600;
//   border-radius: $borderRadius;
//   background: $white;
//   padding: $paddingError;
//   margin-bottom: $borderWidth;
// }
